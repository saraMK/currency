package com.test.currency.presentation.productsListimport android.os.Bundleimport android.util.Logimport android.widget.Toastimport androidx.activity.viewModelsimport androidx.recyclerview.widget.LinearLayoutManagerimport com.test.currency.databinding.ActivityMainBindingimport com.test.currency.common.ActivityStateimport com.test.currency.domain.models.ConverterModelimport com.test.currency.domain.models.CurrencyModelimport com.test.currency.domain.models.ValueModelimport com.test.currency.presentation.base.BaseActivityimport com.test.currency.presentation.currenciesConverter.CurrencyConverterAdapterimport com.test.currency.presentation.dialog.CurrenciesFragmentimport dagger.hilt.android.AndroidEntryPointimport java.text.SimpleDateFormatimport java.util.*import javax.inject.Inject@AndroidEntryPointclass CurrenciesConverterActivity : BaseActivity<ActivityMainBinding>() {    val viewModel by viewModels<CurrenciesViewModel>()    @Inject    lateinit var adapter_: CurrencyConverterAdapter    override fun onCreate(savedInstanceState: Bundle?) {        super.onCreate(savedInstanceState)        binding.list.apply {            adapter = adapter_            layoutManager = LinearLayoutManager(this@CurrenciesConverterActivity)        }        binding.fromBtn.setOnClickListener {            openDialog(true)        }        binding.toBtn.setOnClickListener {            openDialog(false)        }        binding.convertBtn.setOnClickListener {            viewModel.convertCurriencies(null, null)        }        binding.historicalBtn.setOnClickListener {            viewModel.convertCurriencies(getDaysAgo(7), getDaysAgo(0))        }        viewModel.toCurrencyLiveData.observe(this) {            if (!it.isNullOrEmpty())                binding.toBtn.text = it        }        viewModel.fromCurrencyLiveData.observe(this) {            if (!it.isNullOrEmpty())                binding.fromBtn.text = it        }        viewModel.converteState.observe(this) {            when (it) {                is ActivityState.Success<List<ConverterModel>?> -> {                    // binding.loader.bar.visibility = GONE                    if (!it.data.isNullOrEmpty())                        setList(it.data[0].value)                }                is ActivityState.Error -> {                    //  binding.loader.bar.visibility = GONE                    Toast.makeText(this, it.message, Toast.LENGTH_LONG).show()                }                is ActivityState.Loading -> {                    Toast.makeText(this, "loading .....", Toast.LENGTH_LONG).show()                }            }        }    }    fun getDaysAgo(daysAgo: Int): String {        val calendar = Calendar.getInstance()        calendar.add(Calendar.DAY_OF_YEAR, -daysAgo)        val formatter = SimpleDateFormat("yyyy-MM-dd")        val format = formatter.format(calendar.time)        return format    }    fun setList(list: List<ValueModel>) {        adapter_.list = list        var amount = binding.amountTxt.text.toString()        if (amount.isNullOrEmpty()) {            amount = "1"            binding.amountTxt.setText(amount)        }        adapter_.amount = amount.toInt()        adapter_.notifyDataSetChanged()    }    fun openDialog(isFromCurrency: Boolean) {        val dialog = CurrenciesFragment()        val bundle = Bundle()        bundle.putBoolean("isFromCurrency", isFromCurrency)        dialog.arguments = bundle        dialog?.show(supportFragmentManager, "YourDialog")    }    override fun setBindingView(): ActivityMainBinding {        return ActivityMainBinding.inflate(layoutInflater)    }}